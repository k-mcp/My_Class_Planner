<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mcp.myclassplanner.model.dao.MemberMapper">
    <resultMap id="user" type="mcp.myclassplanner.model.dto.User">
        <id property="userId" column="userNo"/>
        <result property="userId" column="userId"/>
        <result property="userPass" column="userPass"/>
        <result property="userName" column="userName"/>
        <result property="userEmail" column="userEmail"/>
        <result property="roleList" column="roleList"/>
        <result property="state" column="state"/>
    </resultMap>


    <resultMap id="memberDTO" type="mcp.myclassplanner.model.dto.MemberDTO">
        <id property="memberCode" column="member_code"/>
        <result property="email" column="email"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="authCode" column="auth_code"/>
        <result property="authStatus" column="auth_status"/>
    </resultMap>

    <select id="searchAllMember" parameterType="string" resultType="string">
        select username
        from tbl_member
        where LOWER(username) LIKE CONCAT(LOWER(#{query}), '%')
    </select>

    <select id="getEncodedPassword" parameterType="string" resultType="string">
        select password
        from tbl_member
        where username = #{username};
    </select>
    <select id="getMemberCodeByUsername" parameterType="string" resultType="Integer">
        select member_code
        from tbl_member
        where username = #{username};
    </select>
    <select id="getAllMembers" resultMap="memberDTO">
        select *
        from tbl_member
    </select>


    <select id="checkAuthStatus" parameterType="string" resultType="int">
        select auth_status
        from tbl_member
        where username = #{username}
    </select>

    <select id="findByUsername" parameterType="string" resultMap="user">
        select * from
        tbl_member
        where username = #{username}
    </select>



    <!--    <select id="signInWithAuth" parameterType="map" resultType="string">-->
    <!--        select email-->
    <!--        from tbl_member-->
    <!--        where username = #{username} AND password = #{password} AND authCode = 1-->

    <!--    <select id="signIn" parameterType="string" resultType="string">-->
    <!--        select password-->
    <!--        from tbl_member-->
    <!--        where username = #{username};-->

    <!--    </select>-->

    <select id="getEmail">
        select email
        from tbl_member
        where username = #{username}
    </select>

    <select id="signUpErrorByEmail" parameterType="mcp.myclassplanner.model.dto.MemberDTO" resultMap="memberDTO">
        select *
        from tbl_member
        where email = #{email}
    </select>

    <select id="signUpErrorByUsername" parameterType="mcp.myclassplanner.model.dto.MemberDTO" resultMap="memberDTO">
        select *
        from tbl_member
        where username = #{username}
    </select>

    <select id="getAuthCode" parameterType="string" resultType="string">
        select auth_code
        from tbl_member
        where email = #{email};
    </select>
    <select id="authorize" parameterType="hashmap" resultMap="memberDTO">
        select * from tbl_member
        where email = #{email}
        AND auth_code = #{authKey};
    </select>
    <insert id="signUp" parameterType="mcp.myclassplanner.model.dto.MemberDTO"
            useGeneratedKeys="true" keyProperty="memberCode">
        INSERT INTO tbl_member
        (
        username,
        password,
        email,
        auth_code,
        auth_status,
        lev,
        ex
        )
        VALUES
        (
        #{username},
        #{password},
        #{email},
        #{authCode},
        #{authStatus},
        1,
        0
        )
    </insert>
    <select id="getLev" parameterType="int" resultType="int">
        select lev
        from tbl_member
        where member_code = #{memberCode}
    </select>
    <update id="authStatus" parameterType="hashmap">
        update tbl_member set auth_status = 1
        where email = #{email};
    </update>
    <select id="getMemberCodeByEmail" parameterType="string" resultType="int">
        select member_code
        from tbl_member
        where email = #{email}
    </select>

    <update id="updatePassword" parameterType="hashmap">
        update tbl_member
        set password = #{newPassword}
        where member_code = #{memberCode};
    </update>
    <select id="getExp" parameterType="int">
        select ex from tbl_member
        where member_code = #{memberCode};
    </select>
    <update id="levUp" parameterType="int">
        update tbl_member
        set lev = lev + 1
        where member_code = #{memberCode};
    </update>
    <update id="addExp" parameterType="hashmap">
        update tbl_member
        set ex = ex + #{exp}
        where member_code = #{memberCode};
    </update>

    <select id="searchUsers" parameterType="string" resultMap="memberDTO">
        SELECT *
        FROM tbl_member
        WHERE username LIKE CONCAT('%', #{query}, '%')
        <!--OR email LIKE CONCAT('%', #{query}, '%');-->
    </select>
</mapper>
